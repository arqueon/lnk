// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Overview

// Input device configuration.
// Find the full list of options on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
input {
    keyboard {
    numlock
        xkb {
            // You can set rules, model, layout, variant and options.
            // For more information, see xkeyboard-config(7).
        	layout "latam"
        	//variant ""
            // For example:
            // layout "us,ru"
            // options "grp:win_space_toggle,compose:ralt,ctrl:nocaps"
            options "ctrl:nocaps"
    }   
    repeat-delay 300
    repeat-rate 25
    }

    // Next sections include libinput settings.
    // Omitting settings disables them, or leaves them at their default values.
    touchpad {
        tap
        dwt
        // dwtp
        // natural-scroll
        accel-speed 0.4
        accel-profile "adaptive"
    }

    mouse {
        // natural-scroll
        accel-speed 0.4
        accel-profile "adaptive"
    }

    // Uncomment this to make the mouse warp to the center of newly focused windows.
    //warp-mouse-to-focus

    // Focus windows and outputs automatically when moving the mouse into them.
    focus-follows-mouse  max-scroll-amount="40%"
    workspace-auto-back-and-forth
}

// Workspaces configuration
workspace "chat" {
    //open-on-output "HDMI-A-1"
}
workspace "web" {
    //open-on-output "DP-2"
}
workspace "ref" {
    //open-on-output "HDMI-A-1"
}
workspace "notes" {
    //open-on-output "HDMI-A-1"
}
workspace "write" {
    //open-on-output "HDMI-A-1"
}
workspace "files" {
    //open-on-output "DP-2"
}
workspace "virt" {
    //open-on-output "DP-2"
}
workspace "media" {
    //open-on-output "DP-2"
}

// Outputs configuration
// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!
/-output "eDP-1" {
    // Uncomment this line to disable this output.
    // off

    // Resolution and, optionally, refresh rate of the output.
    // The format is "<width>x<height>" or "<width>x<height>@<refresh rate>".
    // If the refresh rate is omitted, niri will pick the highest refresh rate
    // for the resolution.
    // If the mode is omitted altogether or is invalid, niri will pick one automatically.
    // Run `niri msg outputs` while inside a niri instance to list all outputs and their modes.
    mode "1920x1080@120.030"

    // You can use integer or fractional scale, for example use 1.5 for 150% scale.
    scale 2

    // Transform allows to rotate the output counter-clockwise, valid values are:
    // normal, 90, 180, 270, flipped, flipped-90, flipped-180 and flipped-270.
    transform "normal"

    // Position of the output in the global coordinate space.
    // This affects directional monitor actions like "focus-monitor-left", and cursor movement.
    // The cursor can only move between directly adjacent outputs.
    // Output scale and rotation has to be taken into account for positioning:
    // outputs are sized in logical, or scaled, pixels.
    // For example, a 3840×2160 output with scale 2.0 will have a logical size of 1920×1080,
    // so to put another output directly adjacent to it on the right, set its x to 1920.
    // If the position is unset or results in an overlap, the output is instead placed
    // automatically.
    position x=1280 y=0
}

/-output "DP-2" {
    // off
    mode "1920x1080@60.000"
    scale 1.0
    // for portrait mode
    // transform "90"
    position x=0 y=0
}

/-output "HDMI-A-1" {
    // off
    mode "1920x1080@60.000"
    scale 1.0
    // for portrait mode
    // transform "90"
    position x=1920 y=0
}

/-output "DP-2" {
    // off
    mode "3440x1440@165.001"
    scale 1.0
    // for portrait mode
    // transform "90"
    position x=1920 y=0
}

/-output "HDMI-A-1" {
    // off
    mode "1920x1080@60.000"
    scale 1.0
    // for portrait mode
    // transform "90"
    position x=0 y=0
}
switch-events {
    lid-close { spawn "qs" "ipc" "call" "globalIPC" "toggleLock"; }
    //lid-open { spawn "notify-send" "The laptop lid is open!"; }
}

// Layout configuration
// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    // Set gaps around windows in logical pixels.
    gaps 15

    // When to center a column when changing focus, options are:
    // - "never", default behavior, focusing an off-screen column will keep at the left
    //  or right edge of the screen.
    // - "always", the focused column will always be centered.
    // - "on-overflow", focusing a column will center it if it doesn't fit
    //  together with the previously focused column.
    center-focused-column "never"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.25
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 0.75

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    background-color "transparent"

    insert-hint {
        // off
        color "#ffc87f80"
        gradient from="#6b8c61" to="#a6da95" angle=45 relative-to="workspace-view"
    }

    tab-indicator {
        width 10
        gap 4
        length total-proportion=1.0
        position "top"
        place-within-column
        }
    
    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    // default-column-width {}

    // By default focus ring and border are rendered as a solid background rectangle
    // behind windows. That is, they will show up through semitransparent windows.
    // This is because windows using client-side decorations can have an arbitrary shape.
    //
    // If you don't like that, you should uncomment `prefer-no-csd` below.
    // Niri will draw focus ring and border *around* windows that agree to omit their
    // client-side decorations.
    //
    // Alternatively, you can override it with a window rule called
    // `draw-border-with-background`.

    // You can change how the focus ring looks.
    focus-ring {
        // Uncomment this line to disable the focus ring.
        // off

        // How many logical pixels the ring extends out from the windows.
        width 1

        // Colors can be set in a variety of ways:
        // - CSS named colors: "red"
        // - RGB hex: "#rgb", "#rgba", "#rrggbb", "#rrggbbaa"
        // - CSS-like notation: "rgb(255, 127, 0)", rgba(), hsl() and a few others.

        // Color of the ring on the active monitor.
//        active-color "#a6da95"
            active-color "#ABB2C9"
            inactive-color "#3A3A3E"

        // Color of the ring on inactive monitors.
//        inactive-color "#505050"

        // You can also use gradients. They take precedence over solid colors.
        // Gradients are rendered the same as CSS linear-gradient(angle, from, to).
        // The angle is the same as in linear-gradient, and is optional,
        // defaulting to 180 (top-to-bottom gradient).
        // You can use any CSS linear-gradient tool on the web to set these up.
        //
        active-gradient from="#ABB2C9" to="#a6da95" angle=45

        // You can also color the gradient relative to the entire view
        // of the workspace, rather than relative to just the window itself.
        // To do that, set relative-to="workspace-view".
        //
        inactive-gradient from="#3A3A3E" to="#808080" angle=45 relative-to="workspace-view"
    }

        shadow {
            softness 30
            spread 5
            offset x=0 y=5
            color "#0007"
        }

    // You can also add a border. It's similar to the focus ring, but always visible.
    /-border {
        // The settings are the same as for the focus ring.
        // If you enable the border, you probably want to disable the focus ring.
        off

        width 1
        active-color "#a6da95"
        inactive-color "#505050"

        // active-gradient from="#ffbb66" to="#ffc880" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

    overview {
        zoom 0.25
    }

    layer-rule {
        match namespace="^swww-daemon$"
        place-within-backdrop true
    }

    layer-rule {
        match namespace="^quickshell-wallpaper$"
    }

    layer-rule {
        match namespace="^quickshell-overview$"
        place-within-backdrop true
    }

// Startup applications
// Add lines like this to spawn processes at startup.
// Note that running niri as a session supports xdg-desktop-autostart,
// which may be more convenient to use.
// See the binds section below for more spawn examples.
// spawn-at-startup "alacritty" "-e" "fish"

spawn-at-startup "swww-daemon"
spawn-at-startup "swww" "img" "~/wallpaper/default.jpg"
//spawn-at-startup "~/.config/niri/waybar.sh"
spawn-at-startup "qs"
spawn-at-startup "swayosd-server"
//spawn-at-startup "swaync" "-c" "~/.config/swaync/config.json" "-s" "~/.config/swaync/style.css"
spawn-at-startup "wlsunset" "-l" "20.70" "-L" "-103.34"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
spawn-at-startup "swayidle"
spawn-at-startup "blueman-applet"
//spawn-at-startup "/opt/ExpanDrive/expandrive" "--autorun"
spawn-at-startup "~/Applications/ExpanDrive-2025.06.20_76b30d38989b8a7085b991b05018a8e0.AppImage"
spawn-at-startup "nm-applet" "--indicator"
spawn-at-startup "kdeconnectd"
spawn-at-startup "kdeconnect-indicator"
spawn-at-startup "copyq"
//spawn-at-startup "cosmic-ext-alternative-startup"
spawn-at-startup "niriswitcher"
spawn-at-startup "ferdium"
//spawn-at-startup "zotero"
//spawn-at-startup "logseq"
spawn-at-startup "niri" "msg" "action"  "focus-workspace" "web"

// Client-side decorations
// Uncomment this line to ask the clients to omit their client-side decorations if possible.
// If the client will specifically ask for CSD, the request will be honored.
// Additionally, clients will be informed that they are tiled, removing some rounded corners.
prefer-no-csd

// Screenshot configuration
// You can change the path where screenshots are saved.
// A ~ at the front will be expanded to the home directory.
// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

// You can also set this to null to disable saving screenshots to disk.
// screenshot-path null

// Animations configuration
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    slowdown 0.7

    workspace-switch {
        spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }
    window-open {
        duration-ms 200
        curve "ease-out-quad"
    }
    window-close {
        duration-ms 200
        curve "ease-out-cubic"
    }
    horizontal-view-movement {
        spring damping-ratio=1.0 stiffness=900 epsilon=0.0001
    }
    window-movement {
        spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
    }
    window-resize {
        spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }
    config-notification-open-close {
        spring damping-ratio=0.6 stiffness=1200 epsilon=0.001
    }
    screenshot-ui-open {
        duration-ms 300
        curve "ease-out-quad"
    }
    overview-open-close {
        spring damping-ratio=1.0 stiffness=900 epsilon=0.0001
    }
}
 
cursor {
    xcursor-theme "Bibata-Modern-Ice" 
    xcursor-size 24
    hide-when-typing
    hide-after-inactive-ms 1000
}

// Window rules
// Window rules let you adjust behavior for individual windows.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules

// Work around WezTerm's initial configure bug
// by setting an empty default-column-width.
window-rule {
    // This regular expression is intentionally made as specific as possible,
    // since this is the default config, and we want no false positives.
    // You can get away with just app-id="wezterm" if you want.
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
/-window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

window-rule {
    geometry-corner-radius 0
    clip-to-geometry true
}

window-rule {
    match app-id="Logseq"
    open-on-workspace "notes"
    open-maximized true
    open-focused false
}

window-rule {
    match title=r#"^Zotero$"# 
    open-on-workspace "ref"
    open-maximized true
    open-focused false
}

window-rule {
    match app-id=r#"[Ff]erdium"#
    match title=r#"^Planify$"# 
    match title=r#"^Akregator$"# 
    match app-id=r#"^io.github.martinrotter.rssguard$"# 
    open-on-workspace "chat"
    open-maximized true
    open-focused true
}

window-rule {
    match title=r#"^Newsflash$"# 
    open-on-workspace "chat"
    default-column-width { proportion 0.6; }
}

window-rule {
    match title=r#"^Waydroid$"# 
    open-on-workspace "web"
    default-column-width { proportion 0.35; }
}

window-rule {
    match app-id="Zettlr"
    match app-id=r#"libreoffice"#
    match app-id=r#"soffice"#
    open-on-workspace "write"
    open-maximized true
    open-focused true
}

// Zotero floating 
window-rule {
    match title=r#"^Progress$"#
    match title="Progress"
    open-floating true
}

window-rule {
    match app-id="virt-manager" title="Virtual Machine Manager"
    match app-id="virt-manager" title="Gestor de máquinas virtuales"
    default-column-width { proportion 0.25; }
    open-on-workspace "virt"
}

window-rule {
    match app-id="virt-manager" title=r#"QEMU/KVM$"#
    open-maximized true
    open-on-workspace "virt"
}

window-rule {
    match app-id="google-chrome"
    default-column-width { proportion 0.85; }
    open-focused true
}

window-rule {
    match app-id="doublecmd" title=r#"Double Commander"#
    match title=r#"^GitHub Desktop$"# 
    match app-id=r#"^GitHub Desktop$"#
    default-column-width { proportion 0.6; }
    open-on-workspace "files"
}

window-rule {
    match app-id="doublecmd" title=r#"Copiar archivo"#
    default-column-width { proportion 0.3333; }
    open-on-workspace "files"
}

window-rule {
    match app-id=r#"jdownloader"#
    match app-id=r#"qbittorrent"#
    match title=r#"^JDownloader 2$"# 
    default-column-width { proportion 0.3; }
    open-on-workspace "files"
    open-focused false
}

window-rule {
    match app-id=r#"io.github.nozwock.Packet"#
    open-focused false
    open-floating true 
}

window-rule {
    match app-id="Alacritty"
    match app-id="kitty"
    match app-id="sublime_text"
    match app-id="thunar"
    match app-id="nemo"
    default-column-width { proportion 0.6; }
}

window-rule {
   match title=r#"Create Parent Item"#
   open-floating true
   min-height 250
}

window-rule {
   match app-id="nemo"
   open-floating true
   default-column-width { fixed 900; }
   default-floating-position x=130 y=200 relative-to="bottom-right"
   min-width 900
   //min-height 600
   min-height 700
   opacity 0.9
}

window-rule {
   match app-id="Alacritty"
   open-floating true
   default-column-width { fixed 1000; }
   default-floating-position x=250 y=50 relative-to="bottom-right"
   min-width 1000
   opacity 0.9
}

window-rule {
   match title=r#"^\s*$"# 
   match title=r#"^Add/Edit Citation$"# 
   match title=r#"^Zotero Settings$"# 
   match title=r#"^Print$"# 
   match title="^(file_progress)$"
   match title="^(confirm)$"
   match title="^(dialog)$"
   match title="^(download)$"
   match title="^(notification )$"
   match title="^(error)$"
   match title="^(splash)$"
   match title="^(nwg-look)$"
   match title="^(Subtitulado instantáneo)$"
   match title="^(confirmreset)$"
   match title="^(Delete profile)$"
   match title="^File Operation Progress$"
   match title="^Confirm to replace files$"
   match title="^KDE Connect URL handler$"
   match title="^(Open File)(.*)$"
   match title="^(Select a File)(.*)$"
   match title="^(Choose wallpaper)(.*)$"
   match title="^(Open Folder)(.*)$"
   match title="^(Save As)(.*)$"
   match title="^(Library)(.*)$"
   match title="^(File Upload)(.*)$"
   match title="^(hyprland-share-picker)$"
   match title="^(.*)-Google$"
   match title="^(.*)System Update$"
   match title=r#"^Progress$"#
   match title=r#"^(progress)$"#  
   match app-id="^xdm-app$"
   open-floating true
}

window-rule {
    match is-active=false
    opacity 0.95
}

window-rule {
    match app-id=r#"YouTube Music"#
    default-column-width { proportion 0.7; }
    open-on-workspace "media"
}

// Keybindings
binds {
    // Keys consist of modifiers separated by + signs, followed by an XKB key name
    // in the end. To find an XKB name for a particular key, you may use a program
    // like wev.
    //
    // "Mod" is a special modifier equal to Super when running on a TTY, and to Alt
    // when running as a winit window.
    //
    // Most actions that you can bind here can also be invoked programmatically with
    // `niri msg action do-something`.

    // Mod-Shift-/, which is usually the same as Mod-?,
    // shows a list of important hotkeys.
    Mod+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Mod+D { spawn  "qs" "ipc" "call" "globalIPC" "toggleLauncher"; }
    Mod+Return { spawn "kitty"; }
//  Mod+Space { spawn "anyrun"; }
    Mod+Space { spawn "qs" "ipc" "call" "globalIPC" "toggleLauncher"; }
    Ctrl+Alt+Escape { spawn "qs" "ipc" "call" "globalIPC" "toggleLock"; }
    Mod+L { spawn "qs" "ipc" "call" "globalIPC" "toggleLock"; }
//  Mod+L { spawn "swaylock"; }
    Mod+Shift+I { spawn "qs" "ipc" "call" "globalIPC" "toggleIdleInhibitor"; }
    Mod+X { spawn "nwg-bar"; }
    Mod+Z { spawn "pkill" "xwayland-satellite" "&&" "xwayland-satellite"; }
    //Mod+O { spawn "firedragon"; }
    Mod+Shift+Return { spawn "thunar" "/home/ruben/Downloads/"; }
    // Use your own binds
    Mod+F1 { spawn "google-chrome-stable"; }
    Mod+B { spawn "qs"; }
    Mod+F2 { spawn "ferdium"; }
    Mod+F3 { spawn "zotero"; }
    Mod+F4 { spawn "logseq"; }
    Mod+F5 { spawn "zettlr"; }
    Mod+F6 { spawn "doublecmd"; }
    Mod+F7 { spawn "virt-manager"; }
    Mod+F8 { spawn "qbittorrent"; }
    Mod+F9 { spawn "jdownloader"; }
    Mod+F10 { spawn "youtube-music"; }
    Mod+F11 { spawn "github-desktop"; }
    Mod+F12 { spawn "planify"; }
//  Color picker
    Mod+Shift+U { spawn "farge" "--notify" "--no-preview"; } 

//  Mod+Shift+C { spawn "swaync-client" "-t" "-sw"; }
    Mod+Shift+C { spawn "qs" "ipc" "call" "globalIPC" "toggleNotificationPopup"; }
    Mod+Shift+B { spawn "killall" "qs" "&&" "qs"; }
//  Mod+Shift+B { spawn "~/.config/niri/waybar.sh"; }
    Mod+M { spawn "mpv" "/dev/video0"; }
    Ctrl+Alt+P { spawn "pamac-manager"; }
    Mod+Shift+M { spawn "wl-present" "mirror"; }
    Mod+Shift+N { spawn "newsflash"; }
    Mod+period { spawn "rofi" "-show" "drun"; }
    Mod+E { toggle-overview; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }
    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioLowerVolume { spawn "swayosd-client" "--output-volume" "lower"; }
    XF86AudioMute { spawn "swayosd-client" "--output-volume" "mute-toggle"; }
    XF86AudioRaiseVolume { spawn "swayosd-client" "--output-volume" "raise"; }
    XF86MonBrightnessDown { spawn "swayosd-client" "--brightness" "lower"; }
    XF86MonBrightnessUp { spawn "swayosd-client" "--brightness" "raise"; }
    F11 { spawn "swayosd-client" "--output-volume" "lower"; }
    F10 { spawn "swayosd-client" "--output-volume" "mute-toggle"; }
    F12 { spawn "swayosd-client" "--output-volume" "raise"; }

    Mod+Q { close-window; }

    // Navigation
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Right { focus-column-right; }
    
    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }

    // Moving windows and columns
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H      { move-column-left; }
    Mod+Ctrl+J      { move-window-down; }
    Mod+Ctrl+K      { move-window-up; }
    Mod+Ctrl+L      { move-column-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    //  Mod+J      { focus-window-or-workspace-down; }
    //  Mod+K      { focus-window-or-workspace-up; }
    //  Mod+Ctrl+J      { move-window-down-or-to-workspace-down; }
    //  Mod+Ctrl+K      { move-window-up-or-to-workspace-up; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    // Mod+Shift+Left  { focus-monitor-left; }
    // Mod+Shift+Down  { focus-monitor-down; }
    // Mod+Shift+Up    { focus-monitor-up; }
    // Mod+Shift+Right { focus-monitor-right; }
    
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    
    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    Mod+Alt+Ctrl+Left  { move-workspace-to-monitor-left; }
    Mod+Alt+Ctrl+Right  { move-workspace-to-monitor-right; }
    // ...

    // Workspace navigation
    Mod+Page_Down    { focus-workspace-down; }
    Mod+Page_Up      { focus-workspace-up; }
//  Mod+U            { focus-workspace-down; }
//  Mod+I            { focus-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up  { move-column-to-workspace-up; }
    Mod+Ctrl+U        { move-column-to-workspace-down; }
    Mod+Ctrl+I        { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up  { move-workspace-up; }
//    Mod+Shift+U        { move-workspace-down; }
//    Mod+Shift+I        { move-workspace-up; }

    // Scrolling through workspaces with mouse wheel
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown    cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp      cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp  cooldown-ms=150 { move-column-to-workspace-up; }

    // Scrolling through columns with mouse wheel
    Mod+WheelScrollRight    { focus-column-right; }
    Mod+WheelScrollLeft     { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown    { focus-column-right; }
    Mod+Shift+WheelScrollUp      { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp  { move-column-left; }

    // Touchpad scrolling
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    Mod+TouchpadScrollUp  { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.

    // Workspace selection by index
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    Mod+Tab { focus-workspace-previous; }

    // Consume and expel windows
    Mod+I  { consume-window-into-column; }
    Mod+O { expel-window-from-column; }

    // There are also commands that consume or expel a single window to the side.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Window resizing
    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+C { center-column; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space          { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

    // Screenshots
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }
    Mod+Print { spawn "~/.config/niri/screenshot_swappy.sh"; }

    // Exit Niri
    Mod+Shift+E { quit; }

    // Power off monitors
    Mod+Shift+P { power-off-monitors; }

    // Browser stuff (commented out)
    // Ctrl+Shift+R { spawn "wtype" "-M" "alt" "-k" "d" "-d" "100" "Return" "-m" "alt"; }
    // Ctrl+left  { spawn "wtype" "-M" "shift" "-M" "ctrl" "-k" "Prior" "-m" "shift" "-m" "ctrl"; }
    // Ctrl+right { spawn "wtype" "-M" "shift" "-M" "ctrl" "-k" "Next" "-m" "shift" "-m" "ctrl"; }

    Mod+Ctrl+MouseLeft { close-window; }
    Mod+MouseMiddle    { maximize-column; }
    Mod+T { toggle-window-floating; }
    Mod+Shift+T { spawn "kitty"; }
    Mod+Shift+Z { spawn "nemo"; }
    Mod+W { toggle-column-tabbed-display; }
    Mod+Shift+W { expand-column-to-available-width; }
    //Mod+Ctrl+Alt+Left { spawn "niri" "msg" "action" "move-workspace-to-monitor" "DP-2"; }
    //Mod+Ctrl+Alt+Right { spawn "niri" "msg" "action" "move-workspace-to-monitor" "HDMI-A-1"; }
    //Mod+Escape { toggle-keyboard-shortcuts-inhibit; }
    Mod+Escape { spawn "kitty" "btop"; }
    Mod+Ctrl+Shift+F { toggle-windowed-fullscreen; }

    Alt+Tab repeat=false { spawn "niriswitcherctl" "show" "--window"; }
    Alt+Shift+Tab repeat=false { spawn "niriswitcherctl" "show" "--window"; }
    Alt+1 repeat=false { spawn "niriswitcherctl" "show" "--workspace"; }
    Alt+Shift+1 repeat=false { spawn "niriswitcherctl" "show" "--workspace"; }
}

// Hotkey overlay configuration
hotkey-overlay {
    skip-at-startup
}
debug {
    honor-xdg-activation-with-invalid-serial
}

// Environment variables
environment {
    DISPLAY ":1"
    QT_QPA_PLATFORMTHEME "qt6ct"
    XDG_SESSION_TYPE "wayland"
    XDG_SESSION_DESKTOP "Niri"
    XDG_CURRENT_DESKTOP "Niri"
    QT_WAYLAND_DISABLE_WINDOWDECORATION "1"
    QT_AUTO_SCREEN_SCALE_FACTOR "1"
    MOZ_ENABLE_WAYLAND "1"
    GDK_SCALE "1"
    BROWSER "google-chrome-stable"
    _JAVA_AWT_WM_NONREPARENTING "1"
    ELECTRON_OZONE_PLATFORM_HINT "auto"
    CHROME_EXECUTABLE "google-chrome-stable"
    GTK_THEME "catppuccin-mocha-blue-standard+default"
    XCURSOR_THEME "Bibata-Modern-Ice"
    HYPRSHOT_DIR "$HOME/Pictures/Screenshots/"
    XDG_SCREENSHOTS_DIR "$HOME/Pictures/Screenshots"
    MANGOHUD "0"
    MANGOHUD_DLSYM "1"
    EDITOR "subl"
    QT_SCALE_FACTOR "1" 
    CLUTTER_BACKEND "wayland"
    GDK_BACKEND "wayland,x11"
    ECORE_EVAS_ENGINE "wayland-egl"
    QT_QPA_PLATFORM "wayland;xcb"
    WINIT_UNIX_BACKEND "wayland"
    QT_QPA_PLATFORMTHEME "qt6ct"
    SDL_VIDEODRIVER "wayland"
    WAYLAND_DISPLAY "wayland-1"
    BEMENU_BACKEND "wayland"
    XDG_BACKEND "wayland"
    _JAVA_OPTIONS "-Dawt.useSystemAAFontSettings=gasp"
}
